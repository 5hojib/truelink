name: Auto Tag and Upload TrueLink Package

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  tag_and_publish:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.14'

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: false

      - name: Extract Version from File
        id: version
        run: |
          VERSION=$(grep -E '__version__ = ".*"' src/truelink/__init__.py | cut -d\" -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Check for Existing Release
        id: check_release
        run: |
          TAG_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/v${{ env.VERSION }})
          if [ "$TAG_EXISTS" -eq 200 ]; then
            echo "Release with tag v${{ env.VERSION }} already exists."
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Release with tag v${{ env.VERSION }} does not exist."
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Get Last Commit Body Only
        id: get_commits
        if: env.RELEASE_EXISTS == 'false'
        run: |
          COMMIT_BODY="$(git log -1 --pretty=format:%b)"
      
          # Remove everything from the dashed line and after, including the dashed line itself
          CLEANED_BODY="$(echo "$COMMIT_BODY" | awk '/^[-]{5,}/ {exit} {print}')"
      
          # Prefix any heading ending with ':' with '### '
          FORMATTED_BODY="$(echo "$CLEANED_BODY" | sed -E 's/^([^[:space:]].*[^[:space:]]):$/### \1:/')"
      
          echo "$FORMATTED_BODY" > release_notes.txt
          echo "Generated release body:"
          cat release_notes.txt

      - name: Install Dependencies
        if: env.RELEASE_EXISTS == 'false'
        run: |
          uv sync --all-extras

      - name: Build Package
        if: env.RELEASE_EXISTS == 'false'
        run: |
          uv build

      - name: Create New Release
        if: env.RELEASE_EXISTS == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body_path: ./release_notes.txt
          files: |
            dist/*
          draft: false
          prerelease: false

      - name: Upload to pypi
        if: env.RELEASE_EXISTS == 'false'
        uses: pypa/gh-action-pypi-publish@release/v1
